{
    "project": {
        "name": "twitter-stream-channels",
        "description": "Manage multiple channel search on the same Twitter Stream",
        "url": "http://labs.topheman.com/"
    },
    "files": {
        "lib/StreamChannels.js": {
            "name": "lib/StreamChannels.js",
            "modules": {
                "twitter-stream-channels": 1
            },
            "classes": {
                "StreamChannels": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/TwitterStreamChannels.js": {
            "name": "lib/TwitterStreamChannels.js",
            "modules": {},
            "classes": {
                "TwitterStreamChannels": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "twitter-stream-channels": {
            "name": "twitter-stream-channels",
            "submodules": {},
            "classes": {
                "StreamChannels": 1,
                "TwitterStreamChannels": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/TwitterStreamChannels.js",
            "line": 8
        }
    },
    "classes": {
        "StreamChannels": {
            "name": "StreamChannels",
            "shortname": "StreamChannels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "twitter-stream-channels",
            "namespace": "",
            "file": "lib/StreamChannels.js",
            "line": 7,
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "extends": "events.EventEmitter",
            "params": [
                {
                    "name": "apiClient",
                    "description": "",
                    "type": "Twit"
                },
                {
                    "name": "options",
                    "description": "You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords.",
                            "type": "Object|Array"
                        },
                        {
                            "name": "follow",
                            "description": "A comma separated list of user IDs, indicating the users to return statuses for in the stream",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "locations",
                            "description": "Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "disableChannelsSubEmitters",
                            "description": "If true, will not fire the events like 'channels/channelName'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "disableChannelsEmitter",
                            "description": "If true, will not fire the event 'channels'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            }
        },
        "TwitterStreamChannels": {
            "name": "TwitterStreamChannels",
            "shortname": "TwitterStreamChannels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "twitter-stream-channels",
            "namespace": "",
            "file": "lib/TwitterStreamChannels.js",
            "line": 8,
            "description": "Manage filters on multiple channels on the same Twitter Stream\n```js\nvar TwitterStreamChannels = require('twitter-stream-channels');\nvar credentials = require('my.twitter.credentials.json');\n\nvar client = new TwitterStreamChannels(credentials);\n\nvar channels = {\n\t\"languages\" : ['javascript','php','java','python','perl'],\n\t\"js-frameworks\" : ['angularjs','jquery','backbone','emberjs'],\n\t\"web\" : ['javascript','nodejs','html5','css','angularjs']\n};\n\nvar stream = client.streamChannels({track:channels});\n\nstream.on('channels/languages',function(tweet){\n   console.log(tweet);//any tweet with 'javascript','php','java','python','perl'\n});\n\nstream.on('channels/js-frameworks',function(tweet){\n   console.log(tweet);//any tweet with 'angularjs','jquery','backbone','emberjs'\n});\n\nstream.on('channels/web',function(tweet){\n   console.log(tweet);//any tweet with 'javascript','nodejs','html5','css','angularjs'\n});\n\nstream.on('channels',function(tweet){\n   console.log(tweet);//any tweet with any of the keywords above\n});\n\n//whatever needs to close stream some time\nsetTimeout(function(){\n   stream.close();//closes the stream connected to Twitter \n},100000);\n```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "credentials",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consumer_key",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "consumer_secret",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token_secret",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "TwitterStreamChannels"
            }
        }
    },
    "classitems": [
        {
            "file": "lib/StreamChannels.js",
            "line": 31,
            "description": "Call this function to restart the stream after you called `.stop()` on it.\n\nNote: there is no need to call `.start()` to begin streaming. ` TwitterStreamChannels.stream` calls .start() for you.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib/StreamChannels.js",
            "line": 43,
            "description": "Closes the opened stream with Twitter",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "removeAllListeners",
                            "description": "If true removes all the listeners set on the stream",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib/StreamChannels.js",
            "line": 55,
            "description": "Returns your channel description",
            "itemtype": "method",
            "name": "getChannels",
            "return": {
                "description": "",
                "type": "StreamChannels.channels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib/StreamChannels.js",
            "line": 64,
            "description": "Removes all the listeners added\n\nSee more methods http://nodejs.org/api/events.html#events_events",
            "itemtype": "method",
            "name": "removeAllListeners",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib/TwitterStreamChannels.js",
            "line": 58,
            "description": "Returns a Twitter API client on which you can do pretty much what you want.\nMore here https://github.com/ttezel/twit",
            "itemtype": "method",
            "name": "getApiClient",
            "return": {
                "description": "",
                "type": "Twit"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib/TwitterStreamChannels.js",
            "line": 68,
            "description": "Opens a Twitter Stream and returns you an other one on which you'll be able to attach events for each channels",
            "itemtype": "method",
            "name": "streamChannels",
            "params": [
                {
                    "name": "options",
                    "description": "You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords.",
                            "type": "Object|Array"
                        },
                        {
                            "name": "follow",
                            "description": "A comma separated list of user IDs, indicating the users to return statuses for in the stream",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "locations",
                            "description": "Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "disableChannelsSubEmitters",
                            "description": "If true, will not fire the events like 'channels/channelName'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "disableChannelsEmitter",
                            "description": "If true, will not fire the event 'channels'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/StreamChannels.js:7"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/StreamChannels.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/StreamChannels.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/StreamChannels.js:55"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/StreamChannels.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/TwitterStreamChannels.js:8"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/TwitterStreamChannels.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/TwitterStreamChannels.js:68"
        }
    ]
}