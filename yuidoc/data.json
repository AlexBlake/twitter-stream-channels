{
    "project": {
        "name": "twitter-stream-channels",
        "description": "Manage multiple channel search on the same Twitter Stream",
        "url": "http://labs.topheman.com/",
        "version": "0.1.0"
    },
    "files": {
        "lib\\MockDataRetriever.js": {
            "name": "lib\\MockDataRetriever.js",
            "modules": {},
            "classes": {
                "MockDataRetriever": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib\\StreamChannels.js": {
            "name": "lib\\StreamChannels.js",
            "modules": {},
            "classes": {
                "StreamChannels": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib\\TwitterStreamChannels.js": {
            "name": "lib\\TwitterStreamChannels.js",
            "modules": {
                "twitter-stream-channels": 1
            },
            "classes": {
                "TwitterStreamChannels": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "twitter-stream-channels": {
            "name": "twitter-stream-channels",
            "submodules": {},
            "classes": {
                "MockDataRetriever": 1,
                "StreamChannels": 1,
                "TwitterStreamChannels": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "lib\\TwitterStreamChannels.js",
            "line": 12,
            "description": "With the Twitter stream API, you can only open one stream at a time. So, if you have multiple filters, the tweets in result will be mixed up, you'll need to do some post-processing.\n\nThis module lets you open multiple channels with there own filters, on the same stream. And then, you can add events to each of them individually, to listen to there results, like if you had open multiple streams.",
            "itemtype": "main"
        }
    },
    "classes": {
        "MockDataRetriever": {
            "name": "MockDataRetriever",
            "shortname": "MockDataRetriever",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "twitter-stream-channels",
            "namespace": "",
            "file": "lib\\MockDataRetriever.js",
            "line": 8,
            "description": "This contructor is private, you should access it via {{#crossLink \"TwitterStreamChannels/launchMockDataRetriever\"}}TwitterStreamChannels.launchMockDataRetriever(credentials,options){{/crossLink}}\n\nThis will allow you to create your own json data mocks\n\nKeep in mind this class is not designed to retrieve lots of tweets on long duration.\n\nIt was only designed to ease the creation of your data mocks to use after with `TwitterStreamChannels.getMockedClass()`\n\nMore infos in the [README on the github repo](https://github.com/topheman/twitter-stream-channels#api)",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "credentials",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consumer_key",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "consumer_secret",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token_secret",
                            "description": "",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "array of keywords to track",
                            "type": "Array"
                        },
                        {
                            "name": "output",
                            "description": "filepath of the json file where to put the retrieved tweets",
                            "type": "String"
                        },
                        {
                            "name": "maxNumber",
                            "description": "maximum number of tweets that will be retrieved (default 200 / max 500)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "200"
                        },
                        {
                            "name": "timeout",
                            "description": "maximum delay after the stream will close whatever number of tweets are captured (default 100 000ms)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "100000"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "MockDataRetriever"
            }
        },
        "StreamChannels": {
            "name": "StreamChannels",
            "shortname": "StreamChannels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "twitter-stream-channels",
            "namespace": "",
            "file": "lib\\StreamChannels.js",
            "line": 7,
            "description": "The constructor itself of this class is private, you should open a StreamChannels via {{#crossLink \"TwitterStreamChannels/streamChannels\"}}TwitterStreamChannels.streamChannels(options){{/crossLink}}",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "extends": "events.EventEmitter",
            "params": [
                {
                    "name": "apiClient",
                    "description": "",
                    "type": "Twit"
                },
                {
                    "name": "options",
                    "description": "You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords.",
                            "type": "Object|Array"
                        },
                        {
                            "name": "follow",
                            "description": "A comma separated list of user IDs, indicating the users to return statuses for in the stream",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "locations",
                            "description": "Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "enableChannelsEvents",
                            "description": "If true, will fire the events like 'channels/channelName'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableRootChannelsEvent",
                            "description": "If true, will fire the event 'channels'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableKeywordsEvents",
                            "description": "If true, will fire the events 'keywords/keywordName' (disabled by default)",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            }
        },
        "TwitterStreamChannels": {
            "name": "TwitterStreamChannels",
            "shortname": "TwitterStreamChannels",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "twitter-stream-channels",
            "namespace": "",
            "file": "lib\\TwitterStreamChannels.js",
            "line": 12,
            "description": "**This is your main point of entry to the whole module**.\n\nManage filters on multiple channels on the same Twitter Stream\n```js\nvar TwitterStreamChannels = require('twitter-stream-channels');\nvar credentials = require('./my.twitter.credentials.json');\n\nvar client = new TwitterStreamChannels(credentials);\n\nvar channels = {\n\t\"languages\" : ['javascript','php','java','python','perl'],\n\t\"js-frameworks\" : ['angularjs','jquery','backbone','emberjs'],\n\t\"web\" : ['javascript','nodejs','html5','css','angularjs']\n};\n\nvar stream = client.streamChannels({track:channels});\n\nstream.on('channels/languages',function(tweet){\n   console.log('>languages',tweet.text);//any tweet with 'javascript','php','java','python','perl'\n});\n\nstream.on('channels/js-frameworks',function(tweet){\n   console.log('>frameworks',tweet.text);//any tweet with 'angularjs','jquery','backbone','emberjs'\n});\n\nstream.on('channels/web',function(tweet){\n   console.log('>web',tweet.text);//any tweet with 'javascript','nodejs','html5','css','angularjs'\n});\n\n//If you want, you can listen on all the channels and pickup the $channels added by the module\n//It contains the channel and the keywords picked up in the tweet\n//stream.on('channels',function(tweet){\n//    console.log(tweet.$channels,tweet.text);//any tweet with any of the keywords above\n//});\n\n//If you're really picky, you can listen to only some keywords\n//stream.on('keywords/javascript',function(tweet){\n//    console.log(tweet.text);//any tweet with the keyword \"javascript\"\n//});\n\nsetTimeout(function(){\n   stream.close();//closes the stream connected to Twitter\n\tconsole.log('>stream closed after 100 seconds');\n},100000);\n```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "credentials",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consumer_key",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "consumer_secret",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token_secret",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "TwitterStreamChannels"
            }
        }
    },
    "classitems": [
        {
            "file": "lib\\StreamChannels.js",
            "line": 46,
            "description": "Adds the events (specifics and propagated from twitter API client), according to options",
            "itemtype": "method",
            "name": "addGenericEvents",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "twitterStream",
                    "description": "",
                    "type": "Twit"
                },
                {
                    "name": "streamChannels",
                    "description": "",
                    "type": "StreamChannels"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "enableChannelsEvents",
                            "description": "If true, will fire the events like 'channels/channelName'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableRootChannelsEvent",
                            "description": "If true, will fire the event 'channels'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableKeywordsEvents",
                            "description": "If true, will fire the events 'keywords/keywordName' (disabled by default)",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 73,
            "description": "Removes the events (specifics and propagated from twitter API client), according to options",
            "itemtype": "method",
            "name": "removeEvents",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "twitterStream",
                    "description": "",
                    "type": "Twit"
                },
                {
                    "name": "streamChannels",
                    "description": "",
                    "type": "StreamChannels"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "removeAllListeners",
                            "description": "If true removes all the listeners set on the stream",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 91,
            "description": "Formats options passed with non-duplicate tracked keywords",
            "itemtype": "method",
            "name": "_getOptionsToPassToApiClient",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 112,
            "description": "Call this function to restart the stream after you called `.stop()` on it.\n\nNote: there is no need to call `.start()` to begin streaming. ` TwitterStreamChannels.streamChannels` calls .start() for you.",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 124,
            "description": "Closes the opened stream with Twitter",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "removeAllListeners",
                            "description": "If true removes all the listeners set on the stream",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 139,
            "description": "Returns your channel description",
            "itemtype": "method",
            "name": "getChannels",
            "return": {
                "description": "",
                "type": "StreamChannels.channels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 148,
            "description": "Returns an array of the keywords you're tracking (duplicates were removed)",
            "itemtype": "method",
            "name": "getTrackedKeywords",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 157,
            "description": "Returns an object key/value - key:your channels - value:the full text search RegExp for the keywords of this channel",
            "itemtype": "method",
            "name": "getchannelsKeywordsLowerCasedRegExp",
            "return": {
                "description": "",
                "type": "StreamChannels.channels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 166,
            "description": "Removes all the listeners added\n\nSee more methods http://nodejs.org/api/events.html#events_events",
            "itemtype": "method",
            "name": "removeAllListeners",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\StreamChannels.js",
            "line": 346,
            "description": "From http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1015\nEscapes characters in the string that are not safe to use in a RegExp.",
            "params": [
                {
                    "name": "s",
                    "description": "The string to escape. If not a string, it will be casted\n    to one.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A RegExp safe, escaped copy of {@code s}.",
                "type": "String"
            },
            "class": "StreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\TwitterStreamChannels.js",
            "line": 71,
            "description": "Returns a mocked object of TwitterStreamChannels on which you will be able to play your scenarios offline with your own mocked tweets",
            "itemtype": "method",
            "name": "getMockedClass",
            "static": 1,
            "return": {
                "description": "",
                "type": "TwitterStreamChannels"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\TwitterStreamChannels.js",
            "line": 81,
            "description": "This will allow you to create your own json data mocks\n\nKeep in mind this class is not designed to retrieve lots of tweets on long duration.\n\nIt was only designed to ease the creation of your data mocks to use after with `TwitterStreamChannels.getMockedClass()`\n\nMore infos in the [README on the github repo](https://github.com/topheman/twitter-stream-channels#api)",
            "itemtype": "method",
            "name": "launchMockDataRetriever",
            "static": 1,
            "params": [
                {
                    "name": "credentials",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consumer_key",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "consumer_secret",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "access_token_secret",
                            "description": "",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "array of keywords to track",
                            "type": "Array"
                        },
                        {
                            "name": "output",
                            "description": "filepath of the json file where to put the retrieved tweets",
                            "type": "String"
                        },
                        {
                            "name": "maxNumber",
                            "description": "maximum number of tweets that will be retrieved (default 200 / max 500)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "200"
                        },
                        {
                            "name": "timeout",
                            "description": "maximum delay after the stream will close whatever number of tweets are captured (default 100 000ms)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "100000"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "MockDataRetriever"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\TwitterStreamChannels.js",
            "line": 107,
            "description": "Returns a Twitter API client on which you can do pretty much what you want.\nMore here https://github.com/ttezel/twit",
            "itemtype": "method",
            "name": "getApiClient",
            "return": {
                "description": "",
                "type": "Twit"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        },
        {
            "file": "lib\\TwitterStreamChannels.js",
            "line": 117,
            "description": "Opens a Twitter Stream and returns you an other one on which you'll be able to attach events for each channels",
            "itemtype": "method",
            "name": "streamChannels",
            "params": [
                {
                    "name": "options",
                    "description": "You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter",
                    "type": "Object",
                    "props": [
                        {
                            "name": "track",
                            "description": "Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords.",
                            "type": "Object|Array"
                        },
                        {
                            "name": "follow",
                            "description": "A comma separated list of user IDs, indicating the users to return statuses for in the stream",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "locations",
                            "description": "Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "enableChannelsEvents",
                            "description": "If true, will fire the events like 'channels/channelName'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableRootChannelsEvent",
                            "description": "If true, will fire the event 'channels'",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableKeywordsEvents",
                            "description": "If true, will fire the events 'keywords/keywordName' (disabled by default)",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "StreamChannels"
            },
            "class": "TwitterStreamChannels",
            "module": "twitter-stream-channels"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:7"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " lib\\StreamChannels.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:46"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " lib\\StreamChannels.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:91"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:139"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:148"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\StreamChannels.js:166"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\TwitterStreamChannels.js:107"
        },
        {
            "message": "Missing item type\nFrom http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1015\nEscapes characters in the string that are not safe to use in a RegExp.",
            "line": " lib\\StreamChannels.js:346"
        }
    ]
}